services:
  # PostgreSQL 数据库
  db:
    image: postgres:15
    container_name: ducha_db
    environment:
      POSTGRES_DB: ducha_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - ducha_network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: ducha_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ducha_network

  # FastAPI 后端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ducha_backend
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/ducha_db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - BACKEND_CORS_ORIGINS=["http://localhost:3000"]
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      - db
      - redis
    networks:
      - ducha_network
    restart: unless-stopped

  # React 前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: ducha_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - ducha_network
    restart: unless-stopped

  # Nginx 反向代理 (生产环境)
  nginx:
    image: nginx:alpine
    container_name: ducha_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - ducha_network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  ducha_network:
    driver: bridge